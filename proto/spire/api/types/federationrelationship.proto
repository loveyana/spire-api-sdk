syntax = "proto3";
package spire.api.types;
option go_package = "github.com/spiffe/spire-api-sdk/proto/spire/api/types";

import "spire/api/types/bundle.proto";

message FederationRelationship {
    // The trust domain name (e.g., "example.org") to federate with.
    string trust_domain = 1;

    // URL of the SPIFFE bundle endpoint that provides the trust
    // bundle to federate with. Must use the HTTPS protocol.
    string bundle_endpoint_url = 2;

    // Required. The endpoint profile type.
    oneof bundle_endpoint_profile {
        // Use Web PKI endpoint profile.
        HTTPSWebProfile https_web = 3;

        // Use SPIFFE Authentication endpoint profile.
        HTTPSSPIFFEProfile https_spiffe = 4;
    }
}

message HTTPSSPIFFEProfile {
    // Specifies the expected SPIFFE ID of the SPIFFE bundle endpoint server.
    string endpoint_spiffe_id = 1;

    // The bundle used to bootstrap the connection to the SPIFFE bundle
    // endpoint server. This field is required for self-serving endpoints (i.e.
    // those which present an SVID from the same trust domain as the bundle
    // being fetched). It must not be set for non self-serving endpoints. If a
    // previous bundle already exists for the trust domain, it will be
    // overwritten with this bundle.
    spire.api.types.Bundle bootstrap_bundle = 2;
}

message HTTPSWebProfile {
}

message FederationRelationshipMask {
    // bundle_endpoint_url field mask.
    bool bundle_endpoint_url = 1;

    // bundle_endpoint_profile field mask.
    bool bundle_endpoint_profile = 2;
}
